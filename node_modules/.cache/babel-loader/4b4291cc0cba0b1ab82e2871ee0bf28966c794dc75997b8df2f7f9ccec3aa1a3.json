{"ast":null,"code":"var _jsxFileName = \"/home/nisha/Downloads/order_module-main/src/components/Cart/Checkout.js\",\n  _s = $RefreshSig$();\nimport classes from './Checkout.module.css';\nimport { useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst isEmpty = value => value.trim() === \"\";\nconst Checkout = props => {\n  _s();\n  const [formInputValidity, setFormInputValidity] = useState({\n    name: true,\n    mobileNumber: true,\n    roomNumber: true\n  });\n  const nameInputRef = useRef();\n  const mobileNumberInputRef = useRef();\n  const roomNumberInputRef = useRef();\n  const confirmHandler = event => {\n    event.preventDefault();\n    const enteredName = nameInputRef.current.value;\n    const enteredMobileNumber = mobileNumberInputRef.current.value;\n    const enteredRoomNumber = roomNumberInputRef.current.value;\n    const enteredNameIsValid = !isEmpty(enteredName);\n    const enteredMobileNumberIsValid = !isEmpty(enteredMobileNumber);\n    const enteredRoomNumberIsValid = !isEmpty(enteredRoomNumber);\n    setFormInputValidity({\n      name: enteredNameIsValid,\n      mobileNumber: enteredMobileNumberIsValid,\n      roomNumber: enteredRoomNumberIsValid\n    });\n    const formIsValid = enteredNameIsValid && enteredMobileNumberIsValid && enteredRoomNumberIsValid;\n    if (!formIsValid) {\n      return;\n    }\n    props.onConfirm({\n      name: enteredName,\n      mobileNumber: enteredMobileNumber,\n      roomNumber: enteredRoomNumber\n    });\n\n    // Clearing the inputs after submission can be optional based on the user experience requirements\n    nameInputRef.current.value = \"\";\n    mobileNumberInputRef.current.value = \"\";\n    roomNumberInputRef.current.value = \"\";\n  };\n  const nameControlClasses = `${classes.control} ${formInputValidity.name ? '' : classes.invalid}`;\n  const mobileNumberControlClasses = `${classes.control} ${formInputValidity.mobileNumber ? '' : classes.invalid}`;\n  const roomNumberControlClasses = `${classes.control} ${formInputValidity.roomNumber ? '' : classes.invalid}`;\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.form,\n    onSubmit: confirmHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameControlClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: nameInputRef,\n        type: \"text\",\n        id: \"name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), !formInputValidity.name && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 37\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: mobileNumberControlClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"mobileNumber\",\n        children: \"Mobile Number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: mobileNumberInputRef,\n        type: \"text\",\n        id: \"mobileNumber\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), !formInputValidity.mobileNumber && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid mobile number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 45\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: roomNumberControlClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"roomNumber\",\n        children: \"Room Number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: roomNumberInputRef,\n        type: \"text\",\n        id: \"roomNumber\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), !formInputValidity.roomNumber && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid room number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 43\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: props.onCancel,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.submit,\n        children: \"Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(Checkout, \"azuHVDBdGru0AuJ8rVPfwmiwJ4g=\");\n_c = Checkout;\nexport default Checkout;\nvar _c;\n$RefreshReg$(_c, \"Checkout\");","map":{"version":3,"names":["classes","useRef","useState","jsxDEV","_jsxDEV","isEmpty","value","trim","Checkout","props","_s","formInputValidity","setFormInputValidity","name","mobileNumber","roomNumber","nameInputRef","mobileNumberInputRef","roomNumberInputRef","confirmHandler","event","preventDefault","enteredName","current","enteredMobileNumber","enteredRoomNumber","enteredNameIsValid","enteredMobileNumberIsValid","enteredRoomNumberIsValid","formIsValid","onConfirm","nameControlClasses","control","invalid","mobileNumberControlClasses","roomNumberControlClasses","className","form","onSubmit","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","ref","type","id","actions","onClick","onCancel","submit","_c","$RefreshReg$"],"sources":["/home/nisha/Downloads/order_module-main/src/components/Cart/Checkout.js"],"sourcesContent":["import classes from './Checkout.module.css';\r\nimport { useRef, useState } from 'react';\r\n\r\nconst isEmpty = value => value.trim() === \"\";\r\n\r\nconst Checkout = (props) => {\r\n  const [formInputValidity, setFormInputValidity] = useState({\r\n    name: true,\r\n    mobileNumber: true,\r\n    roomNumber: true,\r\n  });\r\n\r\n  const nameInputRef = useRef();\r\n  const mobileNumberInputRef = useRef();\r\n  const roomNumberInputRef = useRef();\r\n\r\n  const confirmHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    const enteredName = nameInputRef.current.value;\r\n    const enteredMobileNumber = mobileNumberInputRef.current.value;\r\n    const enteredRoomNumber = roomNumberInputRef.current.value;\r\n\r\n    const enteredNameIsValid = !isEmpty(enteredName);\r\n    const enteredMobileNumberIsValid = !isEmpty(enteredMobileNumber);\r\n    const enteredRoomNumberIsValid = !isEmpty(enteredRoomNumber);\r\n\r\n    setFormInputValidity({\r\n      name: enteredNameIsValid,\r\n      mobileNumber: enteredMobileNumberIsValid,\r\n      roomNumber: enteredRoomNumberIsValid,\r\n    });\r\n\r\n    const formIsValid = enteredNameIsValid && enteredMobileNumberIsValid && enteredRoomNumberIsValid;\r\n\r\n    if (!formIsValid) {\r\n      return;\r\n    }\r\n\r\n    props.onConfirm({\r\n      name: enteredName,\r\n      mobileNumber: enteredMobileNumber,\r\n      roomNumber: enteredRoomNumber,\r\n    });\r\n\r\n    // Clearing the inputs after submission can be optional based on the user experience requirements\r\n    nameInputRef.current.value = \"\";\r\n    mobileNumberInputRef.current.value = \"\";\r\n    roomNumberInputRef.current.value = \"\";\r\n  };\r\n\r\n  const nameControlClasses = `${classes.control} ${formInputValidity.name ? '' : classes.invalid}`;\r\n  const mobileNumberControlClasses = `${classes.control} ${formInputValidity.mobileNumber ? '' : classes.invalid}`;\r\n  const roomNumberControlClasses = `${classes.control} ${formInputValidity.roomNumber ? '' : classes.invalid}`;\r\n\r\n  return (\r\n    <form className={classes.form} onSubmit={confirmHandler}>\r\n      <div className={nameControlClasses}>\r\n        <label htmlFor='name'>Your Name</label>\r\n        <input ref={nameInputRef} type='text' id='name' />\r\n        {!formInputValidity.name && <p>Please enter a valid name</p>}\r\n      </div>\r\n      <div className={mobileNumberControlClasses}>\r\n        <label htmlFor='mobileNumber'>Mobile Number</label>\r\n        <input ref={mobileNumberInputRef} type='text' id='mobileNumber' />\r\n        {!formInputValidity.mobileNumber && <p>Please enter a valid mobile number</p>}\r\n      </div>\r\n      <div className={roomNumberControlClasses}>\r\n        <label htmlFor='roomNumber'>Room Number</label>\r\n        <input ref={roomNumberInputRef} type='text' id='roomNumber' />\r\n        {!formInputValidity.roomNumber && <p>Please enter a valid room number</p>}\r\n      </div>\r\n      <div className={classes.actions}>\r\n        <button type='button' onClick={props.onCancel}>\r\n          Cancel\r\n        </button>\r\n        <button className={classes.submit}>Confirm</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Checkout;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}