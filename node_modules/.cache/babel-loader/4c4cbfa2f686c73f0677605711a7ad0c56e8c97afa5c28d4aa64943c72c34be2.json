{"ast":null,"code":"import classes from'./Checkout.module.css';import{useRef,useState}from'react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const isEmpty=value=>value.trim()===\"\";const Checkout=props=>{const[formInputValidity,setFormInputValidity]=useState({name:true,mobileNumber:true,roomNumber:true});const nameInputRef=useRef();const mobileNumberInputRef=useRef();const roomNumberInputRef=useRef();const confirmHandler=event=>{event.preventDefault();const enteredName=nameInputRef.current.value;const enteredMobileNumber=mobileNumberInputRef.current.value;const enteredRoomNumber=roomNumberInputRef.current.value;const enteredNameIsValid=!isEmpty(enteredName);const enteredMobileNumberIsValid=!isEmpty(enteredMobileNumber);const enteredRoomNumberIsValid=!isEmpty(enteredRoomNumber);setFormInputValidity({name:enteredNameIsValid,mobileNumber:enteredMobileNumberIsValid,roomNumber:enteredRoomNumberIsValid});const formIsValid=enteredNameIsValid&&enteredMobileNumberIsValid&&enteredRoomNumberIsValid;if(!formIsValid){return;}props.onConfirm({name:enteredName,mobileNumber:enteredMobileNumber,roomNumber:enteredRoomNumber});// Clearing the inputs after submission can be optional based on the user experience requirements\nnameInputRef.current.value=\"\";mobileNumberInputRef.current.value=\"\";roomNumberInputRef.current.value=\"\";};const nameControlClasses=\"\".concat(classes.control,\" \").concat(formInputValidity.name?'':classes.invalid);const mobileNumberControlClasses=\"\".concat(classes.control,\" \").concat(formInputValidity.mobileNumber?'':classes.invalid);const roomNumberControlClasses=\"\".concat(classes.control,\" \").concat(formInputValidity.roomNumber?'':classes.invalid);return/*#__PURE__*/_jsxs(\"form\",{className:classes.form,onSubmit:confirmHandler,children:[/*#__PURE__*/_jsxs(\"div\",{className:nameControlClasses,children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"name\",children:\"Your Name\"}),/*#__PURE__*/_jsx(\"input\",{ref:nameInputRef,type:\"text\",id:\"name\"}),!formInputValidity.name&&/*#__PURE__*/_jsx(\"p\",{children:\"Please enter a valid name\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:mobileNumberControlClasses,children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"mobileNumber\",children:\"Mobile Number\"}),/*#__PURE__*/_jsx(\"input\",{ref:mobileNumberInputRef,type:\"text\",id:\"mobileNumber\"}),!formInputValidity.mobileNumber&&/*#__PURE__*/_jsx(\"p\",{children:\"Please enter a valid mobile number\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:roomNumberControlClasses,children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"roomNumber\",children:\"Room Number\"}),/*#__PURE__*/_jsx(\"input\",{ref:roomNumberInputRef,type:\"text\",id:\"roomNumber\"}),!formInputValidity.roomNumber&&/*#__PURE__*/_jsx(\"p\",{children:\"Please enter a valid room number\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:classes.actions,children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:props.onCancel,children:\"Cancel\"}),/*#__PURE__*/_jsx(\"button\",{className:classes.submit,children:\"Confirm\"})]})]});};export default Checkout;","map":{"version":3,"names":["classes","useRef","useState","jsx","_jsx","jsxs","_jsxs","isEmpty","value","trim","Checkout","props","formInputValidity","setFormInputValidity","name","mobileNumber","roomNumber","nameInputRef","mobileNumberInputRef","roomNumberInputRef","confirmHandler","event","preventDefault","enteredName","current","enteredMobileNumber","enteredRoomNumber","enteredNameIsValid","enteredMobileNumberIsValid","enteredRoomNumberIsValid","formIsValid","onConfirm","nameControlClasses","concat","control","invalid","mobileNumberControlClasses","roomNumberControlClasses","className","form","onSubmit","children","htmlFor","ref","type","id","actions","onClick","onCancel","submit"],"sources":["/home/nisha/order_module-main/order_module-main/src/components/Cart/Checkout.js"],"sourcesContent":["import classes from './Checkout.module.css';\r\nimport { useRef, useState } from 'react';\r\n\r\nconst isEmpty = value => value.trim() === \"\";\r\n\r\nconst Checkout = (props) => {\r\n  const [formInputValidity, setFormInputValidity] = useState({\r\n    name: true,\r\n    mobileNumber: true,\r\n    roomNumber: true,\r\n  });\r\n\r\n  const nameInputRef = useRef();\r\n  const mobileNumberInputRef = useRef();\r\n  const roomNumberInputRef = useRef();\r\n\r\n  const confirmHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    const enteredName = nameInputRef.current.value;\r\n    const enteredMobileNumber = mobileNumberInputRef.current.value;\r\n    const enteredRoomNumber = roomNumberInputRef.current.value;\r\n\r\n    const enteredNameIsValid = !isEmpty(enteredName);\r\n    const enteredMobileNumberIsValid = !isEmpty(enteredMobileNumber);\r\n    const enteredRoomNumberIsValid = !isEmpty(enteredRoomNumber);\r\n\r\n    setFormInputValidity({\r\n      name: enteredNameIsValid,\r\n      mobileNumber: enteredMobileNumberIsValid,\r\n      roomNumber: enteredRoomNumberIsValid,\r\n    });\r\n\r\n    const formIsValid = enteredNameIsValid && enteredMobileNumberIsValid && enteredRoomNumberIsValid;\r\n\r\n    if (!formIsValid) {\r\n      return;\r\n    }\r\n\r\n    props.onConfirm({\r\n      name: enteredName,\r\n      mobileNumber: enteredMobileNumber,\r\n      roomNumber: enteredRoomNumber,\r\n    });\r\n\r\n    // Clearing the inputs after submission can be optional based on the user experience requirements\r\n    nameInputRef.current.value = \"\";\r\n    mobileNumberInputRef.current.value = \"\";\r\n    roomNumberInputRef.current.value = \"\";\r\n  };\r\n\r\n  const nameControlClasses = `${classes.control} ${formInputValidity.name ? '' : classes.invalid}`;\r\n  const mobileNumberControlClasses = `${classes.control} ${formInputValidity.mobileNumber ? '' : classes.invalid}`;\r\n  const roomNumberControlClasses = `${classes.control} ${formInputValidity.roomNumber ? '' : classes.invalid}`;\r\n\r\n  return (\r\n    <form className={classes.form} onSubmit={confirmHandler}>\r\n      <div className={nameControlClasses}>\r\n        <label htmlFor='name'>Your Name</label>\r\n        <input ref={nameInputRef} type='text' id='name' />\r\n        {!formInputValidity.name && <p>Please enter a valid name</p>}\r\n      </div>\r\n      <div className={mobileNumberControlClasses}>\r\n        <label htmlFor='mobileNumber'>Mobile Number</label>\r\n        <input ref={mobileNumberInputRef} type='text' id='mobileNumber' />\r\n        {!formInputValidity.mobileNumber && <p>Please enter a valid mobile number</p>}\r\n      </div>\r\n      <div className={roomNumberControlClasses}>\r\n        <label htmlFor='roomNumber'>Room Number</label>\r\n        <input ref={roomNumberInputRef} type='text' id='roomNumber' />\r\n        {!formInputValidity.roomNumber && <p>Please enter a valid room number</p>}\r\n      </div>\r\n      <div className={classes.actions}>\r\n        <button type='button' onClick={props.onCancel}>\r\n          Cancel\r\n        </button>\r\n        <button className={classes.submit}>Confirm</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Checkout;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}