{"ast":null,"code":"var _jsxFileName = \"/home/aparnesh/Downloads/order_module-main 1/order_module-main/src/components/Cart/Checkout.js\",\n  _s = $RefreshSig$();\nimport classes from './Checkout.module.css';\nimport { useRef, useState } from 'react';\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst isNotEmpty = value => value.trim() !== \"\"; // True if not empty\nconst hasFiveChars = value => value.trim().length <= 5; // True if has exactly 5 chars\n\nconst Checkout = props => {\n  _s();\n  const [formInputValidity, setFormInputValidity] = useState({\n    name: true,\n    mobileNumber: true,\n    roomNumber: true\n  });\n  const nameInputRef = useRef();\n  const mobileNumberInputRef = useRef();\n  const roomNumberInputRef = useRef();\n  const confirmHandler = event => {\n    event.preventDefault();\n    const enteredName = nameInputRef.current.value;\n    const enteredMobileNumber = mobileNumberInputRef.current.value;\n    const enteredRoomNumber = roomNumberInputRef.current.value;\n    const enteredNameIsValid = isNotEmpty(enteredName);\n    const enteredMobileNumberIsValid = isNotEmpty(enteredMobileNumber);\n    const enteredRoomNumberIsValid = hasFiveChars(enteredRoomNumber);\n    setFormInputValidity({\n      name: enteredNameIsValid,\n      mobileNumber: enteredMobileNumberIsValid,\n      roomNumber: enteredRoomNumberIsValid\n    });\n    if (!enteredNameIsValid || !enteredMobileNumberIsValid || !enteredRoomNumberIsValid) {\n      return;\n    }\n\n    // Send a POST request to the server\n    fetch('http://localhost:3001/checkout', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name: enteredName,\n        mobileNumber: enteredMobileNumber,\n        roomNumber: enteredRoomNumber\n      })\n    }).then(response => response.json()).then(data => console.log(data)).catch(error => console.error('Error:', error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.form,\n    onSubmit: confirmHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${classes.control} ${formInputValidity.name ? '' : classes.invalid}`,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: nameInputRef,\n        type: \"text\",\n        id: \"name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), !formInputValidity.name && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid name.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 37\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${classes.control} ${formInputValidity.mobileNumber ? '' : classes.invalid}`,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"mobileNumber\",\n        children: \"Mobile Number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: mobileNumberInputRef,\n        type: \"text\",\n        id: \"mobileNumber\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), !formInputValidity.mobileNumber && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid mobile number.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 45\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${classes.control} ${formInputValidity.roomNumber ? '' : classes.invalid}`,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"roomNumber\",\n        children: \"Room Number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: roomNumberInputRef,\n        type: \"text\",\n        id: \"roomNumber\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), !formInputValidity.roomNumber && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please enter a valid room number.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 43\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: props.onCancel,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: classes.submit,\n        children: \"Confirm\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(Checkout, \"azuHVDBdGru0AuJ8rVPfwmiwJ4g=\");\n_c = Checkout;\nexport default Checkout;\nvar _c;\n$RefreshReg$(_c, \"Checkout\");","map":{"version":3,"names":["classes","useRef","useState","React","jsxDEV","_jsxDEV","isNotEmpty","value","trim","hasFiveChars","length","Checkout","props","_s","formInputValidity","setFormInputValidity","name","mobileNumber","roomNumber","nameInputRef","mobileNumberInputRef","roomNumberInputRef","confirmHandler","event","preventDefault","enteredName","current","enteredMobileNumber","enteredRoomNumber","enteredNameIsValid","enteredMobileNumberIsValid","enteredRoomNumberIsValid","fetch","method","headers","body","JSON","stringify","then","response","json","data","console","log","catch","error","className","form","onSubmit","children","control","invalid","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","ref","type","id","actions","onClick","onCancel","submit","_c","$RefreshReg$"],"sources":["/home/aparnesh/Downloads/order_module-main 1/order_module-main/src/components/Cart/Checkout.js"],"sourcesContent":["import classes from './Checkout.module.css';\r\nimport { useRef, useState } from 'react';\r\nimport React from 'react';\r\n\r\nconst isNotEmpty = value => value.trim() !== \"\";  // True if not empty\r\nconst hasFiveChars = value => value.trim().length <=5;  // True if has exactly 5 chars\r\n\r\nconst Checkout = (props) => {\r\n  const [formInputValidity, setFormInputValidity] = useState({\r\n    name: true,\r\n    mobileNumber: true,\r\n    roomNumber: true,\r\n  });\r\n\r\n  const nameInputRef = useRef();\r\n  const mobileNumberInputRef = useRef();\r\n  const roomNumberInputRef = useRef();\r\n\r\n  const confirmHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    const enteredName = nameInputRef.current.value;\r\n    const enteredMobileNumber = mobileNumberInputRef.current.value;\r\n    const enteredRoomNumber = roomNumberInputRef.current.value;\r\n\r\n    const enteredNameIsValid = isNotEmpty(enteredName);\r\n    const enteredMobileNumberIsValid = isNotEmpty(enteredMobileNumber);\r\n    const enteredRoomNumberIsValid = hasFiveChars(enteredRoomNumber);\r\n\r\n    setFormInputValidity({\r\n      name: enteredNameIsValid,\r\n      mobileNumber: enteredMobileNumberIsValid,\r\n      roomNumber: enteredRoomNumberIsValid\r\n    });\r\n\r\n    if (!enteredNameIsValid || !enteredMobileNumberIsValid || !enteredRoomNumberIsValid) {\r\n      return;\r\n    }\r\n\r\n    // Send a POST request to the server\r\n    fetch('http://localhost:3001/checkout', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        name: enteredName,\r\n        mobileNumber: enteredMobileNumber,\r\n        roomNumber: enteredRoomNumber\r\n      })\r\n    })\r\n    .then(response => response.json())\r\n    .then(data => console.log(data))\r\n    .catch(error => console.error('Error:', error));\r\n  };\r\n\r\n  return (\r\n    <form className={classes.form} onSubmit={confirmHandler}>\r\n      <div className={`${classes.control} ${formInputValidity.name ? '' : classes.invalid}`}>\r\n        <label htmlFor='name'>Your Name</label>\r\n        <input ref={nameInputRef} type='text' id='name' />\r\n        {!formInputValidity.name && <p>Please enter a valid name.</p>}\r\n      </div>\r\n      <div className={`${classes.control} ${formInputValidity.mobileNumber ? '' : classes.invalid}`}>\r\n        <label htmlFor='mobileNumber'>Mobile Number</label>\r\n        <input ref={mobileNumberInputRef} type='text' id='mobileNumber' />\r\n        {!formInputValidity.mobileNumber && <p>Please enter a valid mobile number.</p>}\r\n      </div>\r\n      <div className={`${classes.control} ${formInputValidity.roomNumber ? '' : classes.invalid}`}>\r\n        <label htmlFor='roomNumber'>Room Number</label>\r\n        <input ref={roomNumberInputRef} type='text' id='roomNumber' />\r\n        {!formInputValidity.roomNumber && <p>Please enter a valid room number.</p>}\r\n      </div>\r\n      <div className={classes.actions}>\r\n        <button type='button' onClick={props.onCancel}>\r\n          Cancel\r\n        </button>\r\n        <button type=\"submit\" className={classes.submit}>Confirm</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Checkout;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}