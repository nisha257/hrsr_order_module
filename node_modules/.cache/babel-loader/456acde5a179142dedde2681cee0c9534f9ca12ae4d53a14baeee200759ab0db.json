{"ast":null,"code":"import{useReducer}from\"react\";import React from'react';import CartContext from\"./cart-context\";import{jsx as _jsx}from\"react/jsx-runtime\";const defaultCartState={items:[],totalAmount:0};const cartReducer=(state,action)=>{if(action.type===\"ADD\"){const updatedTotalAmount=state.totalAmount+action.item.price*action.item.amount;const existingCartItemIndex=state.items.findIndex(item=>item.id===action.item.id);const existingCartItem=state.items[existingCartItemIndex];let updatedItems;if(existingCartItem){const updatedItem={...existingCartItem,amount:existingCartItem.amount+action.item.amount};updatedItems=[...state.items];updatedItems[existingCartItemIndex]=updatedItem;}else{updatedItems=state.items.concat(action.item);}return{items:updatedItems,totalAmount:updatedTotalAmount};}if(action.type===\"REMOVE\"){const existingCartItemIndex=state.items.findIndex(item=>item.id===action.id);const existingItem=state.items[existingCartItemIndex];const updatedTotalAmount=state.totalAmount-existingItem.price;let updatedItems;if(existingItem.amount===1){updatedItems=state.items.filter(item=>item.id!==action.id);}else{const updatedItem={...existingItem,amount:existingItem.amount-1};updatedItems=[...state.items];updatedItems[existingCartItemIndex]=updatedItem;}return{items:updatedItems,totalAmount:updatedTotalAmount};}if(action.type===\"CLEAR\"){return defaultCartState;}return defaultCartState;};const CartProvider=props=>{const[cartState,dispatchCartAction]=useReducer(cartReducer,defaultCartState);const addItemToCartHandler=item=>{dispatchCartAction({type:\"ADD\",item:item});};const removeItemFromCartHandler=id=>{dispatchCartAction({type:\"REMOVE\",id:id});};const clearCartHandler=()=>{dispatchCartAction({type:\"CLEAR\"});};const cartContext={items:cartState.items,totalAmount:cartState.totalAmount,addItem:addItemToCartHandler,removeItem:removeItemFromCartHandler,clearCart:clearCartHandler};return/*#__PURE__*/_jsx(CartContext.Provider,{value:cartContext,children:props.children});};export default CartProvider;","map":{"version":3,"names":["useReducer","React","CartContext","jsx","_jsx","defaultCartState","items","totalAmount","cartReducer","state","action","type","updatedTotalAmount","item","price","amount","existingCartItemIndex","findIndex","id","existingCartItem","updatedItems","updatedItem","concat","existingItem","filter","CartProvider","props","cartState","dispatchCartAction","addItemToCartHandler","removeItemFromCartHandler","clearCartHandler","cartContext","addItem","removeItem","clearCart","Provider","value","children"],"sources":["/home/nisha/order_module-main/order_module-main/src/store/CartProvider.js"],"sourcesContent":["import { useReducer } from \"react\";\r\nimport React from 'react';\r\nimport CartContext from \"./cart-context\";\r\n\r\nconst defaultCartState = {\r\n  items: [],\r\n  totalAmount: 0,\r\n};\r\n\r\nconst cartReducer = (state, action) => {\r\n  if (action.type === \"ADD\") {\r\n    const updatedTotalAmount =\r\n      state.totalAmount + action.item.price * action.item.amount;\r\n\r\n    const existingCartItemIndex = state.items.findIndex(\r\n      (item) => item.id === action.item.id\r\n    );\r\n    const existingCartItem = state.items[existingCartItemIndex];\r\n    let updatedItems;\r\n\r\n    if (existingCartItem) {\r\n      const updatedItem = {\r\n        ...existingCartItem,\r\n        amount: existingCartItem.amount + action.item.amount,\r\n      };\r\n      updatedItems = [...state.items];\r\n      updatedItems[existingCartItemIndex] = updatedItem;\r\n    } else {\r\n      updatedItems = state.items.concat(action.item);\r\n    }\r\n\r\n    return {\r\n      items: updatedItems,\r\n      totalAmount: updatedTotalAmount,\r\n    };\r\n  }\r\n  if (action.type === \"REMOVE\") {\r\n    const existingCartItemIndex = state.items.findIndex(\r\n      (item) => item.id === action.id\r\n    );\r\n    const existingItem = state.items[existingCartItemIndex];\r\n    const updatedTotalAmount = state.totalAmount - existingItem.price;\r\n    let updatedItems;\r\n    if (existingItem.amount === 1) {\r\n      updatedItems = state.items.filter((item) => item.id !== action.id);\r\n    } else {\r\n      const updatedItem = { ...existingItem, amount: existingItem.amount - 1 };\r\n      updatedItems = [...state.items];\r\n      updatedItems[existingCartItemIndex] = updatedItem;\r\n    }\r\n\r\n    return {\r\n      items: updatedItems,\r\n      totalAmount: updatedTotalAmount,\r\n    };\r\n  }\r\n\r\n  if (action.type === \"CLEAR\") {\r\n    return defaultCartState;\r\n  }\r\n  return defaultCartState;\r\n};\r\n\r\nconst CartProvider = (props) => {\r\n  const [cartState, dispatchCartAction] = useReducer(\r\n    cartReducer,\r\n    defaultCartState\r\n  );\r\n\r\n  const addItemToCartHandler = (item) => {\r\n    dispatchCartAction({ type: \"ADD\", item: item });\r\n  };\r\n\r\n  const removeItemFromCartHandler = (id) => {\r\n    dispatchCartAction({ type: \"REMOVE\", id: id });\r\n  };\r\n\r\n  const clearCartHandler = () => {\r\n    dispatchCartAction({ type: \"CLEAR\" });\r\n  };\r\n  const cartContext = {\r\n    items: cartState.items,\r\n    totalAmount: cartState.totalAmount,\r\n    addItem: addItemToCartHandler,\r\n    removeItem: removeItemFromCartHandler,\r\n    clearCart: clearCartHandler,\r\n  };\r\n\r\n  return (\r\n    <CartContext.Provider value={cartContext}>\r\n      {props.children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n\r\nexport default CartProvider;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}