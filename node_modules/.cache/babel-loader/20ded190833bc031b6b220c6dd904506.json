{"ast":null,"code":"var _jsxFileName = \"/home/nisha/Downloads/food-ordering-app-main/src/components/Cart/Checkout.js\";\nimport classes from './Checkout.module.css';\nimport { useRef, useState } from 'react';\nconst isNotEmpty = value => value.trim() !== \"\"; // True if not empty\nconst hasFiveChars = value => value.trim().length <= 5; // True if has exactly 5 chars\n\nconst Checkout = props => {\n  const [formInputValidity, setFormInputValidity] = useState({\n    name: true,\n    mobileNumber: true,\n    roomNumber: true\n  });\n  const nameInputRef = useRef();\n  const mobileNumberInputRef = useRef();\n  const roomNumberInputRef = useRef();\n  const confirmHandler = event => {\n    event.preventDefault();\n    const enteredName = nameInputRef.current.value;\n    const enteredMobileNumber = mobileNumberInputRef.current.value;\n    const enteredRoomNumber = roomNumberInputRef.current.value;\n    const enteredNameIsValid = isNotEmpty(enteredName);\n    const enteredMobileNumberIsValid = isNotEmpty(enteredMobileNumber);\n    const enteredRoomNumberIsValid = hasFiveChars(enteredRoomNumber);\n    setFormInputValidity({\n      name: enteredNameIsValid,\n      mobileNumber: enteredMobileNumberIsValid,\n      roomNumber: enteredRoomNumberIsValid\n    });\n    if (!enteredNameIsValid || !enteredMobileNumberIsValid || !enteredRoomNumberIsValid) {\n      return;\n    }\n\n    // Send a POST request to the server\n    fetch('http://localhost:3001/checkout', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name: enteredName,\n        mobileNumber: enteredMobileNumber,\n        roomNumber: enteredRoomNumber\n      })\n    }).then(response => response.json()).then(data => console.log(data)).catch(error => console.error('Error:', error));\n  };\n  return /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.form,\n    onSubmit: confirmHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: `${classes.control} ${formInputValidity.name ? '' : classes.invalid}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, \"Your Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    ref: nameInputRef,\n    type: \"text\",\n    id: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }), !formInputValidity.name && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 37\n    }\n  }, \"Please enter a valid name.\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: `${classes.control} ${formInputValidity.mobileNumber ? '' : classes.invalid}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"mobileNumber\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, \"Mobile Number\"), /*#__PURE__*/React.createElement(\"input\", {\n    ref: mobileNumberInputRef,\n    type: \"text\",\n    id: \"mobileNumber\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }), !formInputValidity.mobileNumber && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 45\n    }\n  }, \"Please enter a valid mobile number.\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: `${classes.control} ${formInputValidity.roomNumber ? '' : classes.invalid}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"roomNumber\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, \"Room Number\"), /*#__PURE__*/React.createElement(\"input\", {\n    ref: roomNumberInputRef,\n    type: \"text\",\n    id: \"roomNumber\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }), !formInputValidity.roomNumber && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 43\n    }\n  }, \"Please enter a valid room number.\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.actions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: props.onCancel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: classes.submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, \"Confirm\")));\n};\nexport default Checkout;","map":{"version":3,"names":["classes","useRef","useState","isNotEmpty","value","trim","hasFiveChars","length","Checkout","props","formInputValidity","setFormInputValidity","name","mobileNumber","roomNumber","nameInputRef","mobileNumberInputRef","roomNumberInputRef","confirmHandler","event","preventDefault","enteredName","current","enteredMobileNumber","enteredRoomNumber","enteredNameIsValid","enteredMobileNumberIsValid","enteredRoomNumberIsValid","fetch","method","headers","body","JSON","stringify","then","response","json","data","console","log","catch","error","React","createElement","className","form","onSubmit","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","control","invalid","htmlFor","ref","type","id","actions","onClick","onCancel","submit"],"sources":["/home/nisha/Downloads/food-ordering-app-main/src/components/Cart/Checkout.js"],"sourcesContent":["import classes from './Checkout.module.css';\r\nimport { useRef, useState } from 'react';\r\n\r\nconst isNotEmpty = value => value.trim() !== \"\";  // True if not empty\r\nconst hasFiveChars = value => value.trim().length <=5;  // True if has exactly 5 chars\r\n\r\nconst Checkout = (props) => {\r\n  const [formInputValidity, setFormInputValidity] = useState({\r\n    name: true,\r\n    mobileNumber: true,\r\n    roomNumber: true,\r\n  });\r\n\r\n  const nameInputRef = useRef();\r\n  const mobileNumberInputRef = useRef();\r\n  const roomNumberInputRef = useRef();\r\n\r\n  const confirmHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    const enteredName = nameInputRef.current.value;\r\n    const enteredMobileNumber = mobileNumberInputRef.current.value;\r\n    const enteredRoomNumber = roomNumberInputRef.current.value;\r\n\r\n    const enteredNameIsValid = isNotEmpty(enteredName);\r\n    const enteredMobileNumberIsValid = isNotEmpty(enteredMobileNumber);\r\n    const enteredRoomNumberIsValid = hasFiveChars(enteredRoomNumber);\r\n\r\n    setFormInputValidity({\r\n      name: enteredNameIsValid,\r\n      mobileNumber: enteredMobileNumberIsValid,\r\n      roomNumber: enteredRoomNumberIsValid\r\n    });\r\n\r\n    if (!enteredNameIsValid || !enteredMobileNumberIsValid || !enteredRoomNumberIsValid) {\r\n      return;\r\n    }\r\n\r\n    // Send a POST request to the server\r\n    fetch('http://localhost:3001/checkout', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        name: enteredName,\r\n        mobileNumber: enteredMobileNumber,\r\n        roomNumber: enteredRoomNumber\r\n      })\r\n    })\r\n    .then(response => response.json())\r\n    .then(data => console.log(data))\r\n    .catch(error => console.error('Error:', error));\r\n  };\r\n\r\n  return (\r\n    <form className={classes.form} onSubmit={confirmHandler}>\r\n      <div className={`${classes.control} ${formInputValidity.name ? '' : classes.invalid}`}>\r\n        <label htmlFor='name'>Your Name</label>\r\n        <input ref={nameInputRef} type='text' id='name' />\r\n        {!formInputValidity.name && <p>Please enter a valid name.</p>}\r\n      </div>\r\n      <div className={`${classes.control} ${formInputValidity.mobileNumber ? '' : classes.invalid}`}>\r\n        <label htmlFor='mobileNumber'>Mobile Number</label>\r\n        <input ref={mobileNumberInputRef} type='text' id='mobileNumber' />\r\n        {!formInputValidity.mobileNumber && <p>Please enter a valid mobile number.</p>}\r\n      </div>\r\n      <div className={`${classes.control} ${formInputValidity.roomNumber ? '' : classes.invalid}`}>\r\n        <label htmlFor='roomNumber'>Room Number</label>\r\n        <input ref={roomNumberInputRef} type='text' id='roomNumber' />\r\n        {!formInputValidity.roomNumber && <p>Please enter a valid room number.</p>}\r\n      </div>\r\n      <div className={classes.actions}>\r\n        <button type='button' onClick={props.onCancel}>\r\n          Cancel\r\n        </button>\r\n        <button type=\"submit\" className={classes.submit}>Confirm</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Checkout;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}