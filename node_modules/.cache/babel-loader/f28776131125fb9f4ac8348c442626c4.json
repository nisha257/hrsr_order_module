{"ast":null,"code":"var _jsxFileName = \"/home/nisha/Downloads/food-ordering-app-main/src/components/Cart/Checkout.js\";\nimport React, { useRef, useState } from 'react';\nimport classes from './Checkout.module.css';\nconst isNotEmpty = value => value.trim() !== \"\";\nconst hasFiveChars = value => value.trim().length === 5;\nconst Checkout = props => {\n  const [formInputValidity, setFormInputValidity] = useState({\n    name: false,\n    mobileNumber: false,\n    roomNumber: false\n  });\n  const nameInputRef = useRef();\n  const mobileNumberInputRef = useRef();\n  const roomNumberInputRef = useRef();\n  const confirmHandler = event => {\n    event.preventDefault();\n    const enteredName = nameInputRef.current.value;\n    const enteredMobileNumber = mobileNumberInputRef.current.value;\n    const enteredRoomNumber = roomNumberInputRef.current.value;\n    const enteredNameIsValid = isNotEmpty(enteredName);\n    const enteredMobileNumberIsValid = isNotEmpty(enteredMobileNumber);\n    const enteredRoomNumberIsValid = hasFiveChars(enteredRoomNumber);\n    setFormInputValidity({\n      name: enteredNameIsValid,\n      mobileNumber: enteredMobileNumberIsValid,\n      roomNumber: enteredRoomNumberIsValid\n    });\n    const formIsValid = enteredNameIsValid && enteredMobileNumberIsValid && enteredRoomNumberIsValid;\n    if (!formIsValid) {\n      return;\n    }\n    fetch('http://localhost:3001/checkout', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name: enteredName,\n        mobileNumber: enteredMobileNumber,\n        roomNumber: enteredRoomNumber\n      })\n    }).then(response => response.json()).then(data => console.log(data)).catch(error => console.error('Error:', error));\n  };\n  return /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.form,\n    onSubmit: confirmHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: `${classes.control} ${formInputValidity.name ? '' : classes.invalid}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, \"Your Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    ref: nameInputRef,\n    type: \"text\",\n    id: \"name\",\n    onChange: () => setFormInputValidity({\n      ...formInputValidity,\n      name: isNotEmpty(nameInputRef.current.value)\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }), !formInputValidity.name && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 37\n    }\n  }, \"Please enter a valid name.\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: `${classes.control} ${formInputValidity.mobileNumber ? '' : classes.invalid}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"mobileNumber\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, \"Mobile Number\"), /*#__PURE__*/React.createElement(\"input\", {\n    ref: mobileNumberInputRef,\n    type: \"text\",\n    id: \"mobileNumber\",\n    onChange: () => setFormInputValidity({\n      ...formInputValidity,\n      mobileNumber: isNotEmpty(mobileNumberInputRef.current.value)\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }), !formInputValidity.mobileNumber && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 45\n    }\n  }, \"Please enter a valid mobile number.\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: `${classes.control} ${formInputValidity.roomNumber ? '' : classes.invalid}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"roomNumber\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, \"Room Number\"), /*#__PURE__*/React.createElement(\"input\", {\n    ref: roomNumberInputRef,\n    type: \"text\",\n    id: \"roomNumber\",\n    onChange: () => setFormInputValidity({\n      ...formInputValidity,\n      roomNumber: hasFiveChars(roomNumberInputRef.current.value)\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }), !formInputValidity.roomNumber && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 43\n    }\n  }, \"Room number must be exactly 5 characters.\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.actions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: props.onCancel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: classes.submit,\n    disabled: !formInputValidity.name || !formInputValidity.mobileNumber || !formInputValidity.roomNumber,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, \"Confirm\")));\n};\nexport default Checkout;","map":{"version":3,"names":["React","useRef","useState","classes","isNotEmpty","value","trim","hasFiveChars","length","Checkout","props","formInputValidity","setFormInputValidity","name","mobileNumber","roomNumber","nameInputRef","mobileNumberInputRef","roomNumberInputRef","confirmHandler","event","preventDefault","enteredName","current","enteredMobileNumber","enteredRoomNumber","enteredNameIsValid","enteredMobileNumberIsValid","enteredRoomNumberIsValid","formIsValid","fetch","method","headers","body","JSON","stringify","then","response","json","data","console","log","catch","error","createElement","className","form","onSubmit","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","control","invalid","htmlFor","ref","type","id","onChange","actions","onClick","onCancel","submit","disabled"],"sources":["/home/nisha/Downloads/food-ordering-app-main/src/components/Cart/Checkout.js"],"sourcesContent":["import React, { useRef, useState } from 'react';\r\nimport classes from './Checkout.module.css';\r\n\r\nconst isNotEmpty = value => value.trim() !== \"\";\r\nconst hasFiveChars = value => value.trim().length === 5;\r\n\r\nconst Checkout = (props) => {\r\n  const [formInputValidity, setFormInputValidity] = useState({\r\n    name: false,\r\n    mobileNumber: false,\r\n    roomNumber: false,\r\n  });\r\n\r\n  const nameInputRef = useRef();\r\n  const mobileNumberInputRef = useRef();\r\n  const roomNumberInputRef = useRef();\r\n\r\n  const confirmHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    const enteredName = nameInputRef.current.value;\r\n    const enteredMobileNumber = mobileNumberInputRef.current.value;\r\n    const enteredRoomNumber = roomNumberInputRef.current.value;\r\n\r\n    const enteredNameIsValid = isNotEmpty(enteredName);\r\n    const enteredMobileNumberIsValid = isNotEmpty(enteredMobileNumber);\r\n    const enteredRoomNumberIsValid = hasFiveChars(enteredRoomNumber);\r\n\r\n    setFormInputValidity({\r\n      name: enteredNameIsValid,\r\n      mobileNumber: enteredMobileNumberIsValid,\r\n      roomNumber: enteredRoomNumberIsValid,\r\n    });\r\n\r\n    const formIsValid = enteredNameIsValid && enteredMobileNumberIsValid && enteredRoomNumberIsValid;\r\n\r\n    if (!formIsValid) {\r\n      return;\r\n    }\r\n\r\n    fetch('http://localhost:3001/checkout', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      },\r\n      body: JSON.stringify({\r\n        name: enteredName,\r\n        mobileNumber: enteredMobileNumber,\r\n        roomNumber: enteredRoomNumber\r\n      })\r\n    })\r\n    .then(response => response.json())\r\n    .then(data => console.log(data))\r\n    .catch(error => console.error('Error:', error));\r\n  };\r\n\r\n  return (\r\n    <form className={classes.form} onSubmit={confirmHandler}>\r\n      <div className={`${classes.control} ${formInputValidity.name ? '' : classes.invalid}`}>\r\n        <label htmlFor='name'>Your Name</label>\r\n        <input ref={nameInputRef} type='text' id='name' onChange={() => setFormInputValidity({...formInputValidity, name: isNotEmpty(nameInputRef.current.value)})} />\r\n        {!formInputValidity.name && <p>Please enter a valid name.</p>}\r\n      </div>\r\n      <div className={`${classes.control} ${formInputValidity.mobileNumber ? '' : classes.invalid}`}>\r\n        <label htmlFor='mobileNumber'>Mobile Number</label>\r\n        <input ref={mobileNumberInputRef} type='text' id='mobileNumber' onChange={() => setFormInputValidity({...formInputValidity, mobileNumber: isNotEmpty(mobileNumberInputRef.current.value)})} />\r\n        {!formInputValidity.mobileNumber && <p>Please enter a valid mobile number.</p>}\r\n      </div>\r\n      <div className={`${classes.control} ${formInputValidity.roomNumber ? '' : classes.invalid}`}>\r\n        <label htmlFor='roomNumber'>Room Number</label>\r\n        <input ref={roomNumberInputRef} type='text' id='roomNumber' onChange={() => setFormInputValidity({...formInputValidity, roomNumber: hasFiveChars(roomNumberInputRef.current.value)})} />\r\n        {!formInputValidity.roomNumber && <p>Room number must be exactly 5 characters.</p>}\r\n      </div>\r\n      <div className={classes.actions}>\r\n        <button type='button' onClick={props.onCancel}>\r\n          Cancel\r\n        </button>\r\n        <button type=\"submit\" className={classes.submit} disabled={!formInputValidity.name || !formInputValidity.mobileNumber || !formInputValidity.roomNumber}>\r\n          Confirm\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Checkout;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}